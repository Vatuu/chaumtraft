buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'tld.unknown'
version = project.mod_version

java {
    archivesBaseName = project.mod_id
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: project.mappings_channel, version: "${project.mappings_version}-${project.minecraft_version_long}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', project.mod_id
            mods { mystery { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', project.mod_id
            mods { mystery { source sourceSets.main } }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', project.mod_id
            mods { mystery { source sourceSets.main } }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', project.mod_id, '--all', '--output', file('src/datagen/resources/'), '--existing', file('src/main/resources/')
            mods { mystery { source sourceSets.main } }
        }
    }
}

mixin {
    add sourceSets.main, "chaumtraft.refmap.json"
    config "chaumtraft.mixins.json"
}

sourceSets.main.resources { srcDir 'src/datagen/resources' }

repositories {
    maven {
        name 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version_long}-${project.forge_version}"

    implementation "org.lwjgl:lwjgl-nanovg:${project.nanovg_version}"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::natives-windows"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                //"Specification-Vendor": "mystery authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.mod_id,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "mystery authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }
